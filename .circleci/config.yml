version: 2

jobs:
  build:
    docker:
      - image: ubuntu

    working_directory: /opt/yacht

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Install Docker client
          command: |
            apt-get update
            apt-get install -y curl
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run: |
          docker build -t yacht -f Dockerfile_kcov .
          docker run --security-opt seccomp=unconfined yacht bash run_kcov.sh $CODECOV_TOKEN

      # - run:
      #     command: set -eux
      # - run:
      #     command: apt-get update
      # - run:
      #     command: apt-get install -y libgc-dev zlib1g-dev wget libssl-dev pkg-config cmake zlib1g-dev curl binutils-dev libcurl4-openssl-dev libdw-dev libiberty-dev git make build-essential
      # - run:
      #     command: |
      #       wget "https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init"
      #       chmod +x rustup-init
      #       ./rustup-init -y --no-modify-path --default-toolchain nightly
      #       RUSTUP_HOME=~/.cargo/bin/rustup
      #       CARGO_HOME=~/.cargo/bin/cargo
      #       chmod -R a+w $RUSTUP_HOME $CARGO_HOME;
      #       rm rustup-init
      #       source ~/.cargo/env
      # - run: 
      #     name: Install llvm-6.0 and so on
      #     command: |
      #       apt-get install clang-6.0 llvm-6.0 llvm-6.0-dev opt libedit-dev build-essential -y
      #       # ln -s /usr/bin/clang-6.0 /usr/bin/clang; 
      #       # ln -s /usr/bin/clang++-6.0 /usr/bin/clang++; 
      #       ln -s /usr/bin/llvm-config-6.0 /usr/bin/llvm-config;
      # - run:
      #     name: Setting up kcov
      #     command: |
      #       git clone https://github.com/SimonKagstrom/kcov
      #       cd kcov
      #       git checkout 9db5fa58986c2eae39e82580f15ba6fadb2dc906
      #       cmake .
      #       make -j
      #       make install
      # - run:
      #     name: Test
      #     command: |
      #       export PATH=~/.cargo/bin:$PATH
      #       cargo test --no-run
      #
      #       # REPORT=$(find ./target/debug -maxdepth 1 -name 'yacht-*' -a ! -name '*.d')
      #       # for file in $REPORT; do  
      #       #  echo $file
      #       #  /usr/local/bin/kcov --include-pattern=yacht/src --exclude-pattern=/.cargo ./target/cov "$file"
      #       # done
      #       # bash <(curl -s https://codecov.io/bash) -s ./target/cov
